const path = require('path')
const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const WriteFilePlugin = require('write-file-webpack-plugin')
// const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin
// const CircularDependencyPlugin = require('circular-dependency-plugin')
// const _ = require('lodash')

module.exports = {
  devtool: 'source-map',
  mode: 'development',
  entry: [
    'react-hot-loader/patch',
    'webpack-hot-middleware/client',
    path.join(__dirname, './app/main.js')
  ],
  watchOptions: {
    aggregateTimeout: 5000
  },
  output: {
    path: path.join(__dirname, '../dist/app/'),
    filename: '[name].js',
    publicPath: '/'
  },
  externals: {
    interpreter: 'Interpreter',
    acorn: 'acorn'
  },
  plugins: [
    new webpack.DefinePlugin({
      AUTH_COOKIE_PREFIX: 'Proista',
      NODE_ENV: 'development'
    }),
    new HtmlWebpackPlugin({
      template: path.resolve(__dirname, './app/index.tpl.html'),
      inject: 'body',
      filename: 'index.html'
    }),
    // new webpack.optimize.OccurrenceOrderPlugin(),
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoEmitOnErrorsPlugin(),
    new webpack.EnvironmentPlugin({
      NODE_ENV: 'development' // use 'development' unless process.env.NODE_ENV is defined
    }),
    new WriteFilePlugin()
    // new BundleAnalyzerPlugin({
    //   analyzerMode: 'static',
    //   openAnalyzer: false
    // })
    // new CircularDependencyPlugin({
    //   // `onStart` is called before the cycle detection starts
    //   onStart ({ compilation }) {
    //     console.log('start detecting webpack modules cycles')
    //   },
    //   // `onDetected` is called for each module that is cyclical
    //   onDetected ({ module: webpackModuleRecord, paths, compilation }) {
    //     if ((_.find(paths, (p) => p.includes('react-jsonschema-form') || [])).length > 0) {
    //       // skip react json schema
    //       return
    //     }
    //     // `paths` will be an Array of the relative module paths that make up the cycle
    //     // `module` will be the module record generated by webpack that caused the cycle
    //     compilation.errors.push(new Error(paths.join(' -> ')))
    //   },
    //   // `onEnd` is called before the cycle detection ends
    //   onEnd ({ compilation }) {
    //     console.log('end detecting webpack modules cycles')
    //   }
    // })
  ],
  //   externals: {
  //     'react': 'React',
  //     'react-dom': 'ReactDOM',
  //     'moment': 'moment',
  //     'interpreter': 'Interpreter',
  //     'acorn': 'acorn'
  //   },
  module: {
    rules: [
      {
        test: /\.m?js$/,
        exclude: /(node_modules|bower_components)/,
        use: {
          loader: 'babel-loader'
        }
      },
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader']
      }
    ]
  }
}
